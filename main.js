(()=>{"use strict";var t={28:(t,n,e)=>{e.d(n,{Z:()=>f});var o=e(537),r=e.n(o),a=e(645),i=e.n(a),l=e(667),s=e.n(l),c=new URL(e(7),e.b),u=i()(r()),A=s()(c);u.push([t.id,`*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: 'anton';\n  src: url(${A});\n}\n\n#content{\n  display: flex;\n  flex-direction: column;\n  height: 110vh;\n  width: 100%;\n  background-color: #e5e7eb;\n}\n\n#head{\n  display: flex;\n  width: 100%;\n  height: fit-content;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  font-family: 'anton';\n}\n\n#head p{\n  font-size: 125px;\n  font-family: 'anton';\n}\n\n.game{\n  display: flex;\n  width: auto;\n  height: 100%;\n  justify-content:space-around;\n  margin-top: 35px;\n  padding: 25px;\n  overflow: auto;\n}\n\n.game p{\n  font-family: 'anton';\n  font-size: 50px;\n  text-align: center;\n}\n\n#player, #computer{\n  display: flex;\n  flex-direction: column;\n}\n\n#player-board, #computer-board{\n  margin-top: 60px;\n  display: grid;\n  width: 390px;\n  height: 400px;\n  margin: 20px;\n  border: 1px solid #4b5563;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.player-cells, .computer-cells{\n  border: 1px solid black;\n}\n\n.player-cells{\n  pointer-events: none;\n}\n\n.computer-cells:hover{\n  background-color: #fde68a;\n}\n#info{\n  width: 100%;\n  display: flex;\n  font-size: 18px;\n  justify-content: space-around;\n  font-family: 'anton';\n  margin-top: 30px;\n}\n#info2{\n  width: 100%;\n  display: flex;\n  font-size: 17px;\n  justify-content: center;\n  font-family: 'anton';\n  margin-top: 20px;\n}`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,oBAAoB;EACpB,4CAAuB;AACzB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,aAAa;EACb,WAAW;EACX,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,uBAAuB;EACvB,sBAAsB;EACtB,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,4BAA4B;EAC5B,gBAAgB;EAChB,aAAa;EACb,cAAc;AAChB;;AAEA;EACE,oBAAoB;EACpB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,yBAAyB;EACzB,sCAAsC;EACtC,mCAAmC;AACrC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,yBAAyB;AAC3B;AACA;EACE,WAAW;EACX,aAAa;EACb,eAAe;EACf,6BAA6B;EAC7B,oBAAoB;EACpB,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,aAAa;EACb,eAAe;EACf,uBAAuB;EACvB,oBAAoB;EACpB,gBAAgB;AAClB",sourcesContent:["*{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n@font-face {\n  font-family: 'anton';\n  src: url('./anton.ttf');\n}\n\n#content{\n  display: flex;\n  flex-direction: column;\n  height: 110vh;\n  width: 100%;\n  background-color: #e5e7eb;\n}\n\n#head{\n  display: flex;\n  width: 100%;\n  height: fit-content;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  font-family: 'anton';\n}\n\n#head p{\n  font-size: 125px;\n  font-family: 'anton';\n}\n\n.game{\n  display: flex;\n  width: auto;\n  height: 100%;\n  justify-content:space-around;\n  margin-top: 35px;\n  padding: 25px;\n  overflow: auto;\n}\n\n.game p{\n  font-family: 'anton';\n  font-size: 50px;\n  text-align: center;\n}\n\n#player, #computer{\n  display: flex;\n  flex-direction: column;\n}\n\n#player-board, #computer-board{\n  margin-top: 60px;\n  display: grid;\n  width: 390px;\n  height: 400px;\n  margin: 20px;\n  border: 1px solid #4b5563;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n}\n\n.player-cells, .computer-cells{\n  border: 1px solid black;\n}\n\n.player-cells{\n  pointer-events: none;\n}\n\n.computer-cells:hover{\n  background-color: #fde68a;\n}\n#info{\n  width: 100%;\n  display: flex;\n  font-size: 18px;\n  justify-content: space-around;\n  font-family: 'anton';\n  margin-top: 30px;\n}\n#info2{\n  width: 100%;\n  display: flex;\n  font-size: 17px;\n  justify-content: center;\n  font-family: 'anton';\n  margin-top: 20px;\n}"],sourceRoot:""}]);const f=u},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<t.length;c++){var u=[].concat(t[c]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),e&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=e):u[2]=e),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),n.push(u))}},n}},667:t=>{t.exports=function(t,n){return n||(n={}),t?(t=String(t.__esModule?t.default:t),/^['"].*['"]$/.test(t)&&(t=t.slice(1,-1)),n.hash&&(t+=n.hash),/["'() \t\n]|(%20)/.test(t)||n.needQuotes?'"'.concat(t.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):t):t}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var a={},i=[],l=0;l<t.length;l++){var s=t[l],c=o.base?s[0]+o.base:s[0],u=a[c]||0,A="".concat(c," ").concat(u);a[c]=u+1;var f=e(A),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==f)n[f].references++,n[f].updater(d);else{var p=r(d,o);o.byIndex=l,n.splice(l,0,{identifier:A,updater:p,references:1})}i.push(A)}return i}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var a=o(t=t||[],r=r||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var l=e(a[i]);n[l].references--}for(var s=o(t,r),c=0;c<a.length;c++){var u=e(a[c]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=s}}},569:t=>{var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},7:(t,n,e)=>{t.exports=e.p+"170b842f9a8cd6150a0d.ttf"}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return t[o](a,a.exports,e),a.exports}e.m=t,e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!t;)t=o[r--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var t=e(379),n=e.n(t),o=e(795),r=e.n(o),a=e(569),i=e.n(a),l=e(565),s=e.n(l),c=e(216),u=e.n(c),A=e(589),f=e.n(A),d=e(28),p={};p.styleTagTransform=f(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=u(),n()(d.Z,p),d.Z&&d.Z.locals&&d.Z.locals;const h=function(){let t=[];return t.push({type:"carrier",length:5,timesHit:0,hit:function(){this.timesHit++},isSunk:function(){return this.timesHit===this.length}},{type:"battleship",length:4,timesHit:0,hit:function(){this.timesHit++},isSunk:function(){return this.timesHit===this.length}},{type:"destroyer",length:3,timesHit:0,hit:function(){this.timesHit++},isSunk:function(){return this.timesHit===this.length}},{type:"submarine",length:3,timesHit:0,hit:function(){this.timesHit++},isSunk:function(){return this.timesHit===this.length}},{type:"patrolboat",length:2,timesHit:0,hit:function(){this.timesHit++},isSunk:function(){return this.timesHit===this.length}}),t};function m(){const t=h(),n=(()=>{let t=[];for(let n=0;n<10;n++){t[n]=[];for(let e=0;e<10;e++)t[n].push(null)}return t})();return{placeShips:(e,o,r,a)=>{for(let i=0;i<t.length;i++)if(a){if(e===t[i].type)for(let e=0;e<t[i].length;e++)n[o+e][r]=t[i].type}else if(e===t[i].type)for(let e=0;e<t[i].length;e++)n[o][r+e]=t[i].type},receiveAttack:(e,o)=>{if(null!==n[e][o]&&!1!==n[e][o])for(let r=0;r<t.length;r++)n[e][o]===t[r].type&&(t[r].hit(),n[e][o]=!1);else null===n[e][o]&&(n[e][o]=!1)},board:n,canPlaceShip:function(t,n,e,o,r){if(!1===r){for(let r=0;r<o;r++)if(e+r>=10||null!==t[n][e+r])return!1}else if(!0===r)for(let r=0;r<o;r++)if(n+r>=10||null!==t[n+r][e])return!1;return!0},ships:t}}const g=m();let y=g.ships;const C=m(),E=C.ships,v=()=>({placePlayerShip:(t,n,e,o)=>{g.placeShips(t,n,e,o)},attack:(t,n)=>{!1!==C.board[t][n]&&C.receiveAttack(t,n)},playerArr:g.board,shipOfPlayer:y,sunk:function(){for(let t=0;t<y.length;t++)if(!1===y[t].isSunk())return!1;return!0}}),B=document.getElementById("player-board"),b=document.getElementById("computer-board"),x=v(),w=function(){const t=C.board;function n(t,n,e,o,r,a){if("horizontal"===r)for(let r=0;r<o;r++)t[n][e+r]=a;else if("vertical"===r)for(let r=0;r<o;r++)t[n+r][e]=a}function e(t,n,e,o,r){if("horizontal"===r){for(let r=0;r<o;r++)if(e+r>=10||null!==t[n][e+r])return!1}else if("vertical"===r)for(let r=0;r<o;r++)if(n+r>=10||null!==t[n+r][e])return!1;return!0}let o=null,r=null;return{placeShipsAtRandom:function(){for(let o=0;o<E.length;o++){let r=!1;for(;!r;){const a=Math.floor(10*Math.random()),i=Math.floor(10*Math.random()),l=Math.random()<.5?"horizontal":"vertical";e(t,a,i,E[o].length,l)&&(n(t,a,i,E[o].length,l,E[o].type),r=!0)}}return t},attack:()=>{let t=Math.floor(10*Math.random()),n=Math.floor(10*Math.random()),e=v().playerArr;if(!1!==e[t][n]&&null!==e[t][n])return g.receiveAttack(t,n),o=t,void(r=n);if(null!==o&&null!==r){const t=[[o+1,r],[o-1,r],[o,r+1],[o,r-1]];for(let n=0;n<t.length;n++){let[o,r]=t[n];if(o>=0&&o<10&&r<10&&r>=0&&!1!==e[o][r])return void g.receiveAttack(o,r)}let n=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());if(!1!==e[n][a])g.receiveAttack(n,a);else{for(;!1===e[n][a];)n=Math.floor(10*Math.random()),a=Math.floor(10*Math.random());g.receiveAttack(n,a)}o=null,r=null}else if(null===e[t][n]||!1===e[t][n])if(null===e[t][n])g.receiveAttack(t,n);else{for(;!1===e[t][n];)t=Math.floor(10*Math.random()),n=Math.floor(10*Math.random());g.receiveAttack(t,n)}},sunk:function(){for(let t=0;t<E.length;t++)if(!1===E[t].isSunk())return!1;return!0}}}();!function(){m(),function(){for(let t=0;t<10;t++)for(let n=0;n<10;n++){const e=document.createElement("div");e.classList.add("player-cells"),e.setAttribute("data-row",t),e.setAttribute("data-col",n),B.appendChild(e)}for(let t=0;t<10;t++)for(let n=0;n<10;n++){const e=document.createElement("div");e.classList.add("computer-cells"),e.setAttribute("data-row",t),e.setAttribute("data-col",n),b.appendChild(e)}}(),function(){const t=document.querySelectorAll(".computer-cells"),n=document.querySelectorAll(".player-cells");let e=x.playerArr,o=w.placeShipsAtRandom();window.addEventListener("load",(()=>{n.forEach((t=>{null!==e[t.dataset.row][t.dataset.col]&&!1!==e[t.dataset.row][t.dataset.col]?(t.style.backgroundColor="gray",!1===e[t.dataset.row][t.dataset.col]&&(t.style.backgroundColor="red")):!1===e[t.dataset.row][t.dataset.col]&&(t.style.backgroundColor="#93c5fd")}))})),t.forEach((t=>{t.addEventListener("click",(()=>{!1===o[t.dataset.row][t.dataset.col]&&alert("The cell is attacked"),null!==o[t.dataset.row][t.dataset.col]&&!1!==o[t.dataset.row][t.dataset.col]?(t.style.backgroundColor="red",x.attack(t.dataset.row,t.dataset.col),!0===w.sunk()&&(alert("The computer's ships have sunk, You won"),location.reload()),w.attack(),!0===x.sunk()&&(alert("Your ships have sunk, the computer won"),location.reload())):null===o[t.dataset.row][t.dataset.col]&&(t.style.backgroundColor="#93c5fd",x.attack(t.dataset.row,t.dataset.col),w.attack(),!0===x.sunk()&&(alert("Your ships have sunk, the computer won"),location.reload()),!0===w.sunk()&&(alert("The computer's ships have sunk, You won"),location.reload())),n.forEach((t=>{null!==e[t.dataset.row][t.dataset.col]&&!1!==e[t.dataset.row][t.dataset.col]?t.style.backgroundColor="gray":!1===e[t.dataset.row][t.dataset.col]&&(t.style.backgroundColor="#93c5fd")}))}))}))}();const t=h();(function(){for(let n=0;n<t.length;n++){let e=!1;for(;!e;){const o=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a=Math.random()<.5;m().canPlaceShip(v().playerArr,o,r,t[n].length,a)&&(v().placePlayerShip(t[n].type,o,r,a),e=!0)}}})(),content}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
